diff --git a/kernel/fast_maps.cc b/kernel/fast_maps.cc
index 619c4fd..d92a432 100644
--- a/kernel/fast_maps.cc
+++ b/kernel/fast_maps.cc
@@ -434,12 +434,17 @@ ideal fast_map(ideal map_id, ring map_r, ideal image_id, ring image_r)
 static int maPoly_Substitute(macoeff c, poly p, ring dest_r)
 {
   // substitute the monomial: go through macoeff
-  int len=pLength(p);
+  int len;
+  BOOLEAN zero_div= (rField_is_Ring(dest_r) && !rField_is_Domain(dest_r));
+  if (!zero_div) len=pLength(p);
   int done=0;
   while (c!=NULL)
   {
     done++;
     poly t=pp_Mult_nn(p,c->n,dest_r);
+    #ifdef HAVE_RINGS
+    if (zero_div) len=pLength(t);
+    #endif
     sBucket_Add_p(c->bucket, t, len);
     c=c->next;
   }
diff --git a/kernel/longrat.cc b/kernel/longrat.cc
index 891977c..0e595e9 100644
--- a/kernel/longrat.cc
+++ b/kernel/longrat.cc
@@ -704,8 +704,6 @@ number nlIntDiv (number a, number b)
 #if defined(LDEBUG)
   u->debug=123456;
 #endif
-  assume(a->s==3);
-  assume(b->s==3);
   mpz_init_set(u->z,a->z);
   /* u=u/b */
   u->s = 3;
diff --git a/kernel/p_Mult_q.cc b/kernel/p_Mult_q.cc
index bbb07ef..64e2cbc 100644
--- a/kernel/p_Mult_q.cc
+++ b/kernel/p_Mult_q.cc
@@ -69,7 +69,7 @@ static poly _p_Mult_q_Bucket(poly p, const int lp,
   assume(p != NULL && pNext(p) != NULL && q != NULL && pNext(q) != NULL);
   pAssume1(! pHaveCommonMonoms(p, q));
 #ifdef HAVE_RINGS
-  assume(!rField_is_Ring(currRing));
+  assume(!rField_is_Ring(currRing) || rField_is_Domain(currRing));
 #endif
   assume(lp >= 1 && lq >= 1);
   p_Test(p, r);
